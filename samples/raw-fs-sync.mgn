// Raw file operations with the synchronous native file API
// creates a readme.lower.md that's an all-lowercase version of the README

{
	println: println
} := import('std')
{
	printf: printf
} := import('fmt')
{
	lower: lower
} := import('str')

ReadBuf := 4096

// write the readme.lower
fn writeLower(text) {
	lowerFile := open('./readme.lower.md')
	if lowerFile.type {
		:error -> printf('Could not open readme: {{ 0 }}', lowerFile.error)
		_ -> {
			{ fd: fd } := lowerFile
			writeResult := write(fd, 0, lower(text))
			if writeResult.type {
				:error -> printf('Could not write readme: {{ 0 }}', writeResult.error)
			}
			close(fd)

			println('Done!')
		}
	}
}

// read the README
readmeFile := open('./README.md')
if readmeFile.type {
	:error -> printf('Could not read README: {{ 0 }}', readmeFile.error)
	_ -> {
		{ fd: fd } := readmeFile
		readResult := read(fd, 0, ReadBuf)
		if readResult.type {
			:error -> printf('Could not read README: {{ 0 }}', readResult.error)
			_ -> writeLower(readResult.data)
		}
		close(fd)
	}
}

